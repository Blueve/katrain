{
    "engine": {
        "katago": "",
        "_hint_katago": "Path to your katago executable",
        "model": "katrain/models/g170e-b15c192-s1672170752-d466197061.bin.gz",
        "config": "katrain/KataGo/analysis_config.cfg",
        "threads": 16,
        "max_visits": 500,
        "fast_visits": 50,
        "max_time": 3.0,
        "wide_root_noise": 0.0,
        "_hint_wide_root_noise": "A higher value here (typically 0.05-0.1)\nmakes the analysis explore more moves\nat the cost of some strength.",
        "_enable_ownership": true
    },
    "timer": {
        "byo_length": 30,
        "byo_periods": 5
    },
    "general": {
        "sgf_load": "~/Downloads",
        "sgf_save": "./sgfout",
        "anim_pv_time": 0.5,
        "debug_level": 1,
        "language": "en"
    },
    "game": {
        "size": "19",
        "komi": 6.5,
        "handicap": 0,
        "rules": "japanese",
        "clear_cache": false
    },
    "trainer": {
        "num_undo_prompts": [
            1,
            1,
            1,
            0.5,
            0,
            0
        ],
        "eval_thresholds": [
            12,
            6,
            3,
            1.5,
            0.5,
            0
        ],
        "save_feedback": [
            true,
            true,
            true,
            true,
            true,
            true
        ],
        "eval_off_show_last": 3,
        "eval_show_ai": true,
        "lock_ai": false
    },
    "ai": {
        "default": {
            "_help_right": "No settings available for Default KataGo AI, strength is mainly affected by `max_visits` and `model` in the main settings `engine` section.",
            "_help_left": ""
        },
        "jigo": {
            "target_score": 0.5,
            "_help_left": "Will try to win by `target_score`, without further restrictions.",
            "_help_right": "Also affected by engine settings such as `max_visits`."
        },
        "scoreloss": {
            "strength": 0.5
        },
        "Policy": {
            "opening_moves": 20
        },
        "P:Weighted": {
            "_help_right": "pick_override` determines when top move is chosen without randomness, and `lower_bound` determines the lower bound policy value that is allowed.",
            "_help_left": "Plays move with probability=policy^(1/weaken_fac),i.e. `weaken_fac` influences how much more likely weaker moves are picked.",
            "pick_override": 1.0,
            "lower_bound": 0.001,
            "weaken_fac": 1.25
        },
        "P:Pick": {
            "pick_override": 0.95,
            "pick_n": 5,
            "pick_frac": 0.33,
            "_help_left": "Picks `pick_n + pick_frac * <number of legal moves>` at random and plays the best one. Change `pick_frac` to make it see more moves.",
            "_help_right": "Plays top move if policy value is above `pick_override` to avoid obvious mistakes."
        },
        "P:Local": {
            "pick_override": 0.95,
            "stddev": 1.5,
            "pick_n": 15,
            "pick_frac": 0.0,
            "_help_left": "Samples `pick_n + pick_frac * <number of legal moves>` near the last move and plays the best one.",
            "_help_right": "Lower `stddev` makes it prefer closer moves."
        },
        "P:Tenuki": {
            "pick_override": 0.85,
            "stddev": 7.5,
            "pick_n": 5,
            "pick_frac": 0.5,
            "endgame": 0.45,
            "_help_left": "Samples `pick_n + pick_frac * <number of legal moves>` away from the last move and plays the best one.",
            "_help_right": "Increase `stddev` makes it prefer moves further away. Stops tenukiing after the 'endgame' fraction of the board is filled."
        },
        "P:Influence": {
            "pick_override": 0.95,
            "pick_n": 5,
            "pick_frac": 0.4,
            "threshold": 3.5,
            "line_weight": 10,
            "endgame": 0.4,
            "_help_left": "Samples `pick_n + pick_frac * <number of legal moves>` and plays the best one, biased to above the `threshold` line.",
            "_help_right": "Increase `line_weight` to penalize moves near the edge more. Stops strategy after the 'endgame' fraction of the board is filled."
        },
        "P:Territory": {
            "pick_override": 0.95,
            "pick_n": 5,
            "pick_frac": 0.4,
            "threshold": 3.5,
            "line_weight": 2,
            "endgame": 0.4,
            "_help_left": "Samples `pick_n + pick_frac * <number of legal moves>` and plays the best one, biased to below the `threshold` line.",
            "_help_right": "Increase `line_weight` to penalize moves closer to the center more.  Stops strategy after the 'endgame' fraction of the board is filled."
        }
    }
}